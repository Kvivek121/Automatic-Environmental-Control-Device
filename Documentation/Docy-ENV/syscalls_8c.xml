<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_syscalls_8c" xml:lang="en-US">
<title>C:/Users/acer/STM32CubeIDE/workspace_1.10.2/Final_Selec_v3/Core/Src/syscalls.c File Reference</title>
<indexterm><primary>C:/Users/acer/STM32CubeIDE/workspace_1.10.2/Final_Selec_v3/Core/Src/syscalls.c</primary></indexterm>
<para>

<para>STM32CubeIDE Minimal System calls file. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;sys/stat.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;errno.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;signal.h&gt;<?linebreak?>#include &lt;time.h&gt;<?linebreak?>#include &lt;sys/time.h&gt;<?linebreak?>#include &lt;sys/times.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24">__io_putchar</link> (int ch) <link linkend="_syscalls_8c_1af9aace1b44b73111e15aa39f06f43456">__attribute__</link>((weak))</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1ad0122671640a3af49792ddaa59e8294e">__io_getchar</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_syscalls_8c_1a25c7f100d498300fff65568c2fcfe639">initialise_monitor_handles</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee">_getpid</link> (void)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a062a5101199c3128edd5170f2575bb10">_kill</link> (int pid, int sig)</para>
</listitem>
            <listitem><para>void <link linkend="_syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b">_exit</link> (int status)</para>
</listitem>
            <listitem><para><link linkend="_syscalls_8c_1af9aace1b44b73111e15aa39f06f43456">__attribute__</link> ((weak))</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb">_close</link> (int file)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a41eef54307912a82d20e71c3d47315aa">_fstat</link> (int file, struct stat *st)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b">_isatty</link> (int file)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4">_lseek</link> (int file, int ptr, int dir)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a270c9113047edd8d64186710ad76062b">_open</link> (char *path, int flags,...)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72">_wait</link> (int *status)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc">_unlink</link> (char *name)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69">_times</link> (struct tms *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a4711e961db985ed2c850a8be6597af50">_stat</link> (char *file, struct stat *st)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a31da4cd5328defa76a9e2246992aba12">_link</link> (char *old, char *new)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7">_fork</link> (void)</para>
</listitem>
            <listitem><para>int <link linkend="_syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5">_execve</link> (char *name, char **argv, char **env)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>char ** <link linkend="_syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b">environ</link> = __env</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>STM32CubeIDE Minimal System calls file. </para>

<para><formalpara><title>Author</title>

<para>Auto-generated by STM32CubeIDE <literallayout><computeroutput>       For more information about which c-functions
       need which of these lowlevel functions
       please consult the Newlib libc-manual
</computeroutput></literallayout> </para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
Copyright (c) 2020-2022 STMicroelectronics. All rights reserved.</para>

<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
<para>
Definition in file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_syscalls_8c_1af9aace1b44b73111e15aa39f06f43456"/><section>
    <title>__attribute__()</title>
<indexterm><primary>__attribute__</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>__attribute__</secondary></indexterm>
<para><computeroutput>__attribute__ ((weak) )</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00067">67</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1ad0122671640a3af49792ddaa59e8294e"/><section>
    <title>__io_getchar()</title>
<indexterm><primary>__io_getchar</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>__io_getchar</secondary></indexterm>
<para><computeroutput>int __io_getchar (void )</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00036">36</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24"/><section>
    <title>__io_putchar()</title>
<indexterm><primary>__io_putchar</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>__io_putchar</secondary></indexterm>
<para><computeroutput>int __io_putchar (int ch)</computeroutput></para></section>
<anchor xml:id="_syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb"/><section>
    <title>_close()</title>
<indexterm><primary>_close</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_close</secondary></indexterm>
<para><computeroutput>int _close (int file)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00092">92</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5"/><section>
    <title>_execve()</title>
<indexterm><primary>_execve</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_execve</secondary></indexterm>
<para><computeroutput>int _execve (char * name, char ** argv, char ** env)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00169">169</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b"/><section>
    <title>_exit()</title>
<indexterm><primary>_exit</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_exit</secondary></indexterm>
<para><computeroutput>void _exit (int status)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00061">61</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7"/><section>
    <title>_fork()</title>
<indexterm><primary>_fork</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_fork</secondary></indexterm>
<para><computeroutput>int _fork (void )</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00163">163</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a41eef54307912a82d20e71c3d47315aa"/><section>
    <title>_fstat()</title>
<indexterm><primary>_fstat</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_fstat</secondary></indexterm>
<para><computeroutput>int _fstat (int file, struct stat * st)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00099">99</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee"/><section>
    <title>_getpid()</title>
<indexterm><primary>_getpid</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_getpid</secondary></indexterm>
<para><computeroutput>int _getpid (void )</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00048">48</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b"/><section>
    <title>_isatty()</title>
<indexterm><primary>_isatty</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_isatty</secondary></indexterm>
<para><computeroutput>int _isatty (int file)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00106">106</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a062a5101199c3128edd5170f2575bb10"/><section>
    <title>_kill()</title>
<indexterm><primary>_kill</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_kill</secondary></indexterm>
<para><computeroutput>int _kill (int pid, int sig)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00053">53</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a31da4cd5328defa76a9e2246992aba12"/><section>
    <title>_link()</title>
<indexterm><primary>_link</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_link</secondary></indexterm>
<para><computeroutput>int _link (char * old, char * new)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00155">155</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4"/><section>
    <title>_lseek()</title>
<indexterm><primary>_lseek</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_lseek</secondary></indexterm>
<para><computeroutput>int _lseek (int file, int ptr, int dir)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00112">112</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a270c9113047edd8d64186710ad76062b"/><section>
    <title>_open()</title>
<indexterm><primary>_open</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_open</secondary></indexterm>
<para><computeroutput>int _open (char * path, int flags,  ...)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00120">120</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a4711e961db985ed2c850a8be6597af50"/><section>
    <title>_stat()</title>
<indexterm><primary>_stat</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_stat</secondary></indexterm>
<para><computeroutput>int _stat (char * file, struct stat * st)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00148">148</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69"/><section>
    <title>_times()</title>
<indexterm><primary>_times</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_times</secondary></indexterm>
<para><computeroutput>int _times (struct tms * buf)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00142">142</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc"/><section>
    <title>_unlink()</title>
<indexterm><primary>_unlink</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_unlink</secondary></indexterm>
<para><computeroutput>int _unlink (char * name)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00135">135</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72"/><section>
    <title>_wait()</title>
<indexterm><primary>_wait</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>_wait</secondary></indexterm>
<para><computeroutput>int _wait (int * status)</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00128">128</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
<anchor xml:id="_syscalls_8c_1a25c7f100d498300fff65568c2fcfe639"/><section>
    <title>initialise_monitor_handles()</title>
<indexterm><primary>initialise_monitor_handles</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>initialise_monitor_handles</secondary></indexterm>
<para><computeroutput>void initialise_monitor_handles ( )</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00044">44</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b"/><section>
    <title>environ</title>
<indexterm><primary>environ</primary><secondary>syscalls.c</secondary></indexterm>
<indexterm><primary>syscalls.c</primary><secondary>environ</secondary></indexterm>
<para><computeroutput>char** environ = __env</computeroutput></para><para>
Definition at line <link linkend="_syscalls_8c_source_1l00040">40</link> of file <link linkend="_syscalls_8c_source">syscalls.c</link>.</para>
</section>
</section>
</section>
